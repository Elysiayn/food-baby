{"version":3,"sources":["utils/actions.js","utils/reducers.js","utils/GlobalState.js","components/ImageUpload/index.js","utils/mutations.js","components/MenuForm/index.js","utils/helpers.js","components/MenuList/index.js","components/MenuPreview/index.js","pages/Dashboard.js","components/CartItem/index.js","utils/queries.js","utils/auth.js","components/Cart/index.js","components/MenuItem/index.js","components/Menu/index.js","pages/Home.js","pages/NoMatch.js","pages/Login.js","components/Permission/index.js","components/Nav/index.js","pages/OrderHistory.js","pages/Signup.js","pages/Success.js","components/Themes/Themes.js","components/Themes/GlobalStyles.js","components/Themes/Toggler.js","App.js","components/Themes/useDarkMode.js","serviceWorkerRegistration.js","index.js"],"names":["ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_ACTIVE_INDEX","UPDATE_ALL_COURSES","UPDATE_CURRENT_MENU_ITEM","UPDATE_MENU_ITEMS","UPDATE_USER","reducer","state","action","type","cartOpen","cart","menuItem","menuItems","newState","filter","_id","length","map","purchaseQuantity","activeIndex","allCourses","currentCourse","itemPreview","user","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","useStoreContext","useContext","ImageUpload","accept","name","storageRef","firebase","storage","ref","onUploadError","error","console","log","onUploadSuccess","filename","child","getDownloadURL","then","url","image","LOGIN","gql","ADD_MENU_ITEM","ADD_USER","ADD_ORDER","DELETE_MENU_ITEM","MenuForm","index","useMutation","addMenuItem","handleChange","event","target","getAttribute","selectedOption","querySelector","textContent","course","priceInt","parseInt","price","handleFormSubmit","a","preventDefault","variables","mutationResponse","Accordion","Content","active","Form","onSubmit","Input","label","placeholder","onChange","Group","widths","Field","htmlFor","min","id","Select","fluid","options","key","text","TextArea","Button","formatName","string","splitArr","toLowerCase","i","split","s","charAt","toUpperCase","slice","join","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","onsuccess","transaction","objectStore","put","all","getAll","delete","oncomplete","close","MenuList","deleteMenuItem","menu","JSON","parse","localStorage","getItem","handleDelete","Table","striped","selectable","compact","Header","HeaderCell","className","Body","item","Row","Cell","Icon","data-id","onClick","MenuPreview","useEffect","previewArea","document","Object","keys","itemName","itemPrice","itemCourse","itemImage","itemDescription","description","innerHTML","Segment","icon","Dashboard","handleClick","horizontal","styled","Title","CartItem","size","role","aria-label","QUERY_ALL_COURSES","QUERY_MENU_ITEM","QUERY_ALL_MENU_ITEMS","QUERY_USER","QUERY_CHECKOUT","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","data","toggleCart","getCart","res","redirectToCheckout","sessionId","checkout","session","dividing","List","as","Item","sum","forEach","toFixed","calculateTotal","Auth","loggedIn","animated","menuItemIds","push","hidden","visible","to","src","MenuItem","useQuery","loading","Card","Image","ui","wrapped","Meta","Description","itemInCart","find","cartItem","Menu","coursesLoading","coursesData","stringify","undefined","title","courseName","Home","contextRef","createRef","Grid","stackable","columns","Column","Ref","innerRef","Rail","position","Sticky","context","NoMatch","Login","useState","email","password","formState","setFormState","login","Permission","permission","setPermission","firebaseId","messaging","Label","color","deleteToken","requestPermission","database","set","firstName","lastName","catch","Nav","divided","href","logout","showNav","OrderHistory","orders","order","purchaseDate","toLocaleDateString","alt","Signup","addUser","message","includes","Success","addOrder","menuItemData","setTimeout","saveOrder","lightTheme","body","toggleBorder","background","darkTheme","div","GlobalStyles","createGlobalStyle","theme","button","StyledDiv","Sun","svg","Moon","Toggle","toggleTheme","xmlns","width","height","viewBox","style","fill","d","client","ApolloClient","operation","setContext","headers","authorization","uri","apps","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","onMessage","payload","App","setTheme","setMode","mode","localTheme","useDarkMode","themeToggler","themeMode","show","setShow","notification","setNotification","Message","onDismiss","delay","header","content","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.1b2884f8.chunk.js","sourcesContent":["export const ADD_TO_CART = 'ADD_TO_CART';\nexport const ADD_MULTIPLE_TO_CART = 'ADD_MULTIPLE_TO_CART';\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\nexport const UPDATE_CART_QUANTITY = 'UPDATE_CART_QUANTITY';\nexport const CLEAR_CART = 'CLEAR_CART';\nexport const TOGGLE_CART = 'TOGGLE_CART';\nexport const UPDATE_ACTIVE_INDEX = 'UPDATE_ACTIVE_INDEX';\nexport const UPDATE_ALL_COURSES = 'UPDATE_ALL_COURSES';\nexport const UPDATE_CURRENT_COURSE = 'UPDATE_CURRENT_COURSE';\nexport const UPDATE_CURRENT_MENU_ITEM = 'UPDATE_CURRENT_MENU_ITEM';\nexport const UPDATE_MENU_ITEMS = 'UPDATE_MENU_ITEMS';\nexport const UPDATE_USER = 'UPDATE_USER';","import { useReducer } from \"react\";\nimport {\n    ADD_TO_CART,\n    ADD_MULTIPLE_TO_CART,\n    REMOVE_FROM_CART,\n    UPDATE_CART_QUANTITY,\n    CLEAR_CART,\n    TOGGLE_CART,\n    UPDATE_ACTIVE_INDEX,\n    UPDATE_ALL_COURSES,\n    UPDATE_CURRENT_COURSE,\n    UPDATE_CURRENT_MENU_ITEM,\n    UPDATE_MENU_ITEMS,\n    UPDATE_USER\n  } from \"./actions\";\n\n\nexport const reducer = (state, action) => {\n    switch (action.type) {\n        case ADD_TO_CART:\n            return {\n                ...state,\n                cartOpen: true,\n                cart: [...state.cart, action.menuItem]\n            };\n      \n        case ADD_MULTIPLE_TO_CART:\n            return {\n                ...state,\n                cartOpen: true,\n                cart:[...state.cart, ...action.menuItems]\n            };\n      \n        case REMOVE_FROM_CART:\n            let newState = state.cart.filter(menuItem => {\n                return menuItem._id !== action._id\n            });\n      \n            return{\n                ...state,\n                cartOpen: newState.length > 0,\n                cart: newState\n            };\n      \n        case UPDATE_CART_QUANTITY:\n            return {\n                ...state,\n                cartOpen: true,\n                cart: state.cart.map(menuItem=> {\n                    if (action._id === menuItem._id) {\n                        menuItem.purchaseQuantity = action.purchaseQuantity;\n                    }\n                    return menuItem;\n                })\n            };\n      \n        case CLEAR_CART:\n            return {\n                ...state,\n                cartOpen: false,\n                cart:[]\n            };    \n      \n        case TOGGLE_CART:\n            return {\n                ...state,\n                cartOpen: !state.cartOpen\n            };\n\n        case UPDATE_ACTIVE_INDEX: \n            return {\n                ...state,\n                activeIndex: action.activeIndex\n            };\n        \n        case UPDATE_ALL_COURSES:\n            return {\n                ...state,\n                allCourses: [...action.allCourses]\n            };\n            \n        case UPDATE_CURRENT_COURSE:\n            return {\n                ...state,\n                currentCourse: action.currentCourse\n            };\n\n        case UPDATE_CURRENT_MENU_ITEM:\n            return {\n                ...state,\n                itemPreview: {...action.itemPreview}\n            };\n            \n        case UPDATE_MENU_ITEMS:\n            return {\n                ...state,\n                menuItems: [...action.menuItems]\n            };\n\n        case UPDATE_USER:\n            return {\n                ...state,\n                user: {...action.user}\n            };\n            \n        default:\n            return state;\n    }\n};\n      \nexport function useMenuReducer(initialState) {\n    return useReducer(reducer, initialState)\n};","import React, { createContext, useContext } from 'react';\nimport { useMenuReducer } from './reducers';\n\nconst StoreContext = createContext ();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n    const [state, dispatch] = useMenuReducer({\n        activeIndex: '',\n        allCourses: [],\n        cart: [],\n        cartOpen: false,\n        currentCourse: '',\n        itemPreview: {},\n        menuItems: [],\n        user: {}\n    });\n\n    return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n    return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };","import React from 'react';\nimport firebase from 'firebase';\nimport FileUploader from 'react-firebase-file-uploader';\n\nimport { UPDATE_CURRENT_MENU_ITEM } from '../../utils/actions';\nimport { useStoreContext } from '../../utils/GlobalState';\n\nconst ImageUpload = () => {\n    const [state, dispatch] = useStoreContext();\n\n    const handleUploadError = error =>  console.log(error);\n\n    const handleUploadSuccess = filename => {\n\n        firebase\n            .storage()\n            .ref('images')\n            .child(filename)\n            .getDownloadURL()\n            .then(url => dispatch({\n                type: UPDATE_CURRENT_MENU_ITEM,\n                itemPreview: {\n                    ...state.itemPreview,\n                    image: url\n                }\n            }));\n    };\n\n    return (\n        <FileUploader\n            accept='image/*'\n            name='image'\n            storageRef={firebase.storage().ref('images')}\n            onUploadError={handleUploadError}\n            onUploadSuccess={handleUploadSuccess}\n        />\n    );\n};\n\nexport default ImageUpload;","import gql from 'graphql-tag';\n\nexport const LOGIN = gql`\n    mutation login($email: String!, $password: String!) {\n        login(email: $email, password: $password) {\n            token\n            user {\n                _id\n            }\n        }\n    }\n`;\n\nexport const ADD_MENU_ITEM = gql`\n    mutation addMenuItem($menuItem: MenuItemInput) {\n        addMenuItem(menuItem: $menuItem) {\n            _id\n            name\n            description\n            image\n            price\n            course {\n                _id\n                name\n            }\n        }\n    }\n\n`;\n\nexport const ADD_USER = gql`\n    mutation addUser($firstName: String!, $lastName: String!, $email: String!, $password: String!) {\n        addUser(firstName: $firstName, lastName: $lastName, email: $email, password: $password) {\n            token\n            user {\n                _id\n            }\n        }\n    }\n`;\n\nexport const ADD_ORDER = gql`\n    mutation addOrder($menuItems: [ID]!) {\n        addOrder(menuItems: $menuItems) {\n            _id\n            purchaseDate\n            menuItems {\n                _id\n                name\n                description\n                price\n                course {\n                    _id\n                    name\n                }\n            }\n        }\n    }\n`;\n\nexport const DELETE_MENU_ITEM = gql`\n    mutation deleteMenuItem($_id: ID!) {\n        deleteMenuItem(_id: $_id) {\n            _id\n        }\n    }\n`;\n\nexport const EDIT_MENU_ITEM = gql`\n    mutation updateMenuItem($_id: ID!, $name: String, $description: String, $price: Int) {\n        updateMenuItem(_id: $_id, name: $name, description: $description, price: $price) {\n            _id\n            name\n            description\n            image\n            price\n            course {\n                _id\n                name\n            }\n        }\n    }\n`;","import React from 'react';\nimport { Accordion, Button, Form } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\n\nimport ImageUpload from '../ImageUpload';\n\nimport { UPDATE_CURRENT_MENU_ITEM } from '../../utils/actions';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { ADD_MENU_ITEM } from '../../utils/mutations';\n\nconst MenuForm = (props) => {\n    const [state, dispatch] = useStoreContext();\n    const { itemPreview } = state;\n    const { index } = props;\n    const [addMenuItem] = useMutation(ADD_MENU_ITEM);\n\n    const courses = [\n        { key: '0', value: 'appetizers', text: 'appetizers' },\n        { key: '1', value: 'mains', text: 'mains' },\n        { key: '2', value: 'desserts', text: 'desserts' },\n        { key: '3', value: 'drinks', text: 'drinks' }\n    ]\n\n    const handleChange = event => {\n        const { name, value } = event.target    \n\n        // updates GlobalStore for live function render and to handle form save\n        switch (true) {\n            // specifically targets semantic ui's select form\n            case (event.target.getAttribute('role') === 'option'): \n                \n                // gets course type selected\n                const selectedOption = event.target.querySelector('span').textContent\n                \n                dispatch({\n                    type: UPDATE_CURRENT_MENU_ITEM,\n                    itemPreview: {\n                        ...itemPreview,\n                        course: selectedOption\n                    }\n                });\n\n                break;\n            case (name === 'price'):\n                // parses an integer from form data\n                const priceInt = parseInt(value);\n\n                dispatch({ \n                    type: UPDATE_CURRENT_MENU_ITEM,\n                    itemPreview: {\n                        ...itemPreview,\n                        price: priceInt\n                    }\n                });\n\n                break;\n            default: \n                dispatch({\n                    type: UPDATE_CURRENT_MENU_ITEM,\n                    itemPreview: { \n                        ...itemPreview, \n                        [name]: value \n                    }\n                });\n        }\n    };\n\n    const handleFormSubmit = async event => {\n        event.preventDefault();\n\n        try {\n            const mutationResponse = await addMenuItem({ variables: {\n                menuItem: itemPreview\n            }});\n\n            return mutationResponse;\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    return (\n        <Accordion.Content active={state.activeIndex === index}>\n            <Form onSubmit={handleFormSubmit}>\n                <Form.Input \n                    label='Name' \n                    name='name'\n                    placeholder='Enter the name of the menu item' \n                    onChange={handleChange} \n                />\n                <Form.Group widths='equal'>\n                    <Form.Field>\n                        <label htmlFor='form-price'>Price</label>\n                        <input \n                            type='number' \n                            name='price' \n                            min='0' \n                            onChange={handleChange} \n                            id='form-price'\n                        />\n                    </Form.Field> \n                    <Form.Select \n                        fluid \n                        label='Course'\n                        name='course'\n                        placeholder='Select the Course' \n                        options={courses} \n                        onChange={handleChange} \n                    />\n                </Form.Group>\n                <Form.Field>\n                    <label htmlFor='form-image-upload'>Image</label>\n                    <ImageUpload />\n                </Form.Field>\n                <Form.TextArea \n                    label='Description' \n                    name='description'\n                    placeholder='Enter a short description of the menu item.' \n                    onChange={handleChange} \n                />\n                    <Button type='submit'>Save</Button>\n            </Form>\n        </Accordion.Content>\n    );\n};\n\nexport default MenuForm;","export function formatName(string) {\n    const splitArr = [' ', '-', '\"'];\n    string = string.toLowerCase();\n\n    // splits, formats, and joins strings for each format case in splitArr\n    for (let i = 0; i < splitArr.length; i++) {\n        string = string.split(splitArr[i])\n            .map(s => s.charAt(0).toUpperCase() + s.slice(1))\n            .join(splitArr[i])\n    };\n\n    return string;\n};\n\nexport function filterMenu(menuItems, courseName) {\n    return menuItems.filter(item => item.course.name === courseName);\n};\n\nexport function idbPromise(storeName, method, object) {\n    return new Promise((resolve, reject) => {\n        // open connection to database\n        const request = window.indexedDB.open('food-baby', 1);\n\n        // create variables to hold reference\n        let db, tx, store;\n\n        // if version changed, run this method\n        request.onupgradeneeded = function(e) {\n            const db = request.result;\n\n            db.createObjectStore('menuItems', { keyPath: '_id' });\n            db.createObjectStore('courses', { keyPath: '_id' });\n            db.createObjectStore('cart', { keyPath: '_id' });\n        };\n\n        // handle errors\n        request.onerror = function(e) {\n            console.log('There was an error.');\n        };\n\n        // on successful open, save reference of database to 'db' variable, open a transaction, and save a reference to the object store\n        request.onsuccess = function(e) {\n            db = request.result;\n            tx = db.transaction(storeName, 'readwrite');\n            store = tx.objectStore(storeName);\n\n            db.onerror = function(e) {\n                console.log('error', e);\n            };\n\n            switch (method) {\n                case 'put': \n                    store.put(object);\n                    resolve(object);\n                    break;\n                case 'get': \n                    const all = store.getAll();\n                    all.onsuccess = function() {\n                        resolve(all.result);\n                    };\n                    break;\n                case 'delete':\n                    store.delete(object._id);\n                    break;\n                default:\n                    console.log('Not a valid method.');\n                    break\n            };\n\n            // close connection on complete\n            tx.oncomplete = function() {\n                db.close();\n            };\n        };\n    });\n};","import React from 'react';\nimport { Accordion, Icon, Table } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\n\nimport { UPDATE_MENU_ITEMS } from '../../utils/actions';\nimport { formatName } from '../../utils/helpers';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { DELETE_MENU_ITEM } from '../../utils/mutations';\n\nconst MenuList = () => {\n    const [state, dispatch] = useStoreContext();\n    const [deleteMenuItem] = useMutation(DELETE_MENU_ITEM);\n\n    if (state.menuItems.length < 1) {\n        // uses menu saved in localStorage\n        const menu = JSON.parse(localStorage.getItem('menuItems'));\n\n        dispatch({ \n            type: UPDATE_MENU_ITEMS,\n            menuItems: menu\n        });\n    }\n\n    const handleDelete = (event) => {\n        const id = event.target.getAttribute('data-id');\n        deleteMenuItem({ variables: {_id: id } });\n    };\n\n    return (\n        <Accordion.Content active={state.activeIndex === 0}>\n            <Table striped selectable compact>\n                <Table.Header>\n                    <Table.HeaderCell>Name</Table.HeaderCell>\n                    <Table.HeaderCell>Price</Table.HeaderCell>\n                    <Table.HeaderCell>Course</Table.HeaderCell>\n                    <Table.HeaderCell className='edit-cell'>Edit / Delete</Table.HeaderCell>\n                </Table.Header>\n\n                <Table.Body>\n                    {state.menuItems.map(item => (\n                        <Table.Row>\n                            <Table.Cell>{formatName(item.name)}</Table.Cell>\n                            <Table.Cell>${item.price}</Table.Cell>\n                            <Table.Cell>{item.course.name}</Table.Cell>\n                            <Table.Cell className='edit-cell'>\n                                <Icon name='edit' /> \n                                / \n                                <Icon name='delete' data-id={item._id} onClick={handleDelete} />\n                            </Table.Cell>\n                        </Table.Row>\n                    ))}\n                </Table.Body>\n            </Table>\n\n        </Accordion.Content>\n    );\n};\n\nexport default MenuList;","import React, { useEffect } from 'react';\nimport { Header, Icon, Segment } from 'semantic-ui-react';\n\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { formatName } from '../../utils/helpers';\n\nconst MenuPreview = () => {\n    const [state] = useStoreContext();\n    \n    useEffect(() => {\n        const previewArea = document.querySelector('.preview-area');\n        const { itemPreview } = state;\n        \n        // renders if object is not empty\n        if (Object.keys(itemPreview).length) {\n            const itemName = itemPreview.name ? \n                itemPreview.name : 'Item Name'\n            const itemPrice = itemPreview.price ? \n                `$${itemPreview.price}` : 'Set a price'\n            const itemCourse = itemPreview.course ? \n                itemPreview.course : 'pick a course'\n            const itemImage = itemPreview.image ?\n                `<img src=${itemPreview.image} alt=${itemPreview.name} />` : 'Upload an image!'\n            const itemDescription = itemPreview.description ? \n                itemPreview.description : 'Give your menu item a short description.'\n\n            previewArea.innerHTML = `\n                <h3>${formatName(itemName)}</h3>\n                <div>\n                    <span class=\"preview-price\">${itemPrice}</span>, ${itemCourse}\n                </div>\n                <div class=\"preview-image\">${itemImage}</div>\n                <div class='preview-description'>${itemDescription}</div>\n            `;\n        }\n\n    }, [state])\n\n    return (\n        <div className='preview-area'>\n            <Segment placeholder className='menu-placeholder'>\n                <Header icon>\n                    <Icon name='utensils' />\n                    Preview your new menu item here.\n                </Header>\n            </Segment>\n        </div>\n    );\n};\n\nexport default MenuPreview;","import React from 'react';\nimport { Accordion, Icon, Segment } from 'semantic-ui-react';\n\nimport MenuForm from '../components/MenuForm';\nimport MenuList from '../components/MenuList';\nimport MenuPreview from '../components/MenuPreview';\n\nimport { UPDATE_ACTIVE_INDEX } from '../utils/actions';\nimport { useStoreContext } from '../utils/GlobalState';\n\nconst Dashboard = () => {\n    const [state, dispatch] = useStoreContext();\n\n    const handleClick = (index) => {\n        if (index === state.activeIndex) {\n            // closes menu if active menu is the one clicked\n            dispatch({\n                type: UPDATE_ACTIVE_INDEX,\n                activeIndex: -1\n            })\n        } else {\n            dispatch({\n                type: UPDATE_ACTIVE_INDEX,\n                activeIndex: index\n            });\n        }\n    };\n\n    return (\n        <Segment.Group horizontal>\n            <Segment className='dashboard-left'>\n                <Accordion fluid styled>\n\n                    <Accordion.Title\n                        active={state.activeIndex === 0}\n                        onClick={() => handleClick(0)}\n                    >\n                        <Icon name='dropdown' />\n                        Current Menu\n                    </Accordion.Title>\n                    <MenuList />\n\n                    <Accordion.Title\n                        active={state.activeIndex === 1}\n                        onClick={() => handleClick(1)}\n                    >\n                        <Icon name='dropdown' />\n                        Add Menu Item\n                    </Accordion.Title>\n                    <MenuForm index={1} />\n                    \n                </Accordion>\n            </Segment>\n            <Segment>\n                <MenuPreview />\n            </Segment>\n        </Segment.Group>\n    );\n};\n\nexport default Dashboard;","import React from 'react';\nimport { Header, Input } from 'semantic-ui-react'\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\n\nconst CartItem = ({ item } ) => {\n    const [,dispatch] = useStoreContext();\n\n    const removeFromCart = () => {\n        dispatch({\n            type: REMOVE_FROM_CART,\n            _id: item._id\n        });\n        idbPromise('cart', 'delete', { ...item });\n    };\n\n    const onChange = (e) => {\n        const value = e.target.value;\n\n        if( value < 1) {\n            dispatch({\n                type: REMOVE_FROM_CART,\n                _id: item._id\n            });\n            idbPromise('cart', 'delete', { ...item });\n        } else {\n            dispatch({\n                type:UPDATE_CART_QUANTITY,\n                _id: item._id,\n                purchaseQuantity: parseInt(value)\n            });\n            idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n    };\n    };\n\n    return (\n        <div className='flex-row'>\n            <div>\n                <Header size='small'>{item.name}</Header>\n                ${item.price}\n                <div>\n                    <span>Qty: </span>\n                    <Input\n                        type='number'\n                        placeholder='1'\n                        value={item.purchaseQuantity}\n                        onChange={onChange}\n                    /> \n                    <span\n                        role='img'\n                        aria-label='trash'\n                        onClick={()=> removeFromCart(item)}\n                    >\n                     🗑️\n                    </span>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default CartItem;","import gql from 'graphql-tag';\n\nexport const QUERY_ALL_COURSES = gql`\n   { \n       course {\n        _id\n        name\n    }\n}\n`;\n\nexport const QUERY_MENU_ITEM = gql`\n    query menuItem($_id: ID!) {\n        menuItem(_id: $_id) {\n            _id\n            name\n            description\n            price\n            course {\n                _id\n                name\n            }\n        }\n    }\n`;\n\nexport const QUERY_ALL_MENU_ITEMS = gql`\n{    \n    menuItems {\n        _id\n        name\n        description\n        price\n        image\n        course {\n            _id\n            name\n        }\n    }\n}\n`;\n\nexport const QUERY_USER = gql`\n    {\n        user {\n            _id\n            firstName\n            lastName\n            role\n            orders {\n                _id\n                purchaseDate\n                menuItems {\n                    _id\n                    name\n                    description\n                    price\n                    course {\n                        _id\n                        name\n                    }\n                }\n            }\n            favorites {\n                _id\n                name\n                description\n                price\n                course {\n                    _id\n                    name\n                }\n            }\n        }\n    }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n    query getCheckout($menuItems: [ID]!) {\n        checkout(menuItems: $menuItems) {\n            session\n        }\n    }\n`;\n\n","import decode from 'jwt-decode';\n\nclass AuthService {\n    getProfile() {\n        return decode(this.getToken());\n    }\n\n    loggedIn() {\n        const token = this.getToken();\n        return !!token && !this.isTokenExpired(token);\n    }\n\n    isTokenExpired(token) {\n        try {\n            const decoded = decode(token);\n            if (decoded.exp < Date.now() / 1000) {\n                return true;\n            } else return false;\n        } catch (err) {\n            return false;\n        }\n    }\n\n    getToken() {\n        return localStorage.getItem('id_token');\n    }\n\n    login(idToken) {\n        localStorage.setItem('id_token', idToken);\n        window.location.assign('/');\n    }\n\n    logout() {\n        localStorage.removeItem('id_token');\n        window.location.assign('/');\n    }\n};\n\nexport default new AuthService();","import React, { useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Button, Header, Icon, List, Segment } from 'semantic-ui-react';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { loadStripe } from '@stripe/stripe-js';\n\nimport CartItem from '../CartItem';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART  } from '../../utils/actions';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport Auth from '../../utils/auth';\nimport './style.css';\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n    const [state, dispatch] = useStoreContext();\n    const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n    function toggleCart() {\n        dispatch({ type:TOGGLE_CART});\n    }\n    \n    \n    function calculateTotal() {\n        let sum = 0;\n        state.cart.forEach(item => {\n            sum += item.price * item.purchaseQuantity;\n        });\n        return sum.toFixed(2);\n    }\n\n    function submitCheckout() {\n        const menuItemIds = [];\n\n        state.cart.forEach((item) => {\n            for (let i = 0; i < item.purchaseQuantity; i++) {\n                menuItemIds.push(item._id);\n            }\n        });\n\n        getCheckout({\n            variables: { menuItems: menuItemIds }\n        });\n    }\n\n    useEffect(() => {\n        async function getCart() {\n          const cart = await idbPromise('cart', 'get');\n          dispatch({ type: ADD_MULTIPLE_TO_CART, menuItems: [...cart] });\n        };\n    \n        if (!state.cart.length) {\n          getCart();\n        }\n      }, [state.cart.length, dispatch]);\n\n    useEffect(() => {\n        if (data) {\n            stripePromise.then((res) => {\n                res.redirectToCheckout({ sessionId: data.checkout.session });\n            });\n        }\n    }, [data]);\n\n    if (!state.cartOpen) {\n        return (\n            <div className='cart-closed' onClick={toggleCart}>\n                <span\n                role='img'\n                aria-label='takeout'>🥡</span>\n            </div>\n        );\n    }\n\n    return (\n        <Segment className='cart'>\n            <div className='close' onClick={toggleCart}>[close]</div>\n            <Header size='medium' dividing>\n                Current Order\n            </Header>\n            {state.cart.length ? (\n            <div className='cart-body'>\n                <List as='ol'>\n                    {state.cart.map(item => (\n                        <List.Item as='li'>\n                            <CartItem key={item._id} item={item} />\n                        </List.Item>\n                    ))}\n                </List>\n                <div className='flex-row space-between'>\n                    <p>\n\n                        <strong>Total: ${calculateTotal()}</strong>\n                    </p>\n                    <p>\n                        {\n                            Auth.loggedIn() ?\n                            <Button animated='fade' onClick={submitCheckout} id='cart-btn'>\n                                <Button.Content hidden>Checkout</Button.Content>\n                                <Button.Content visible>\n                                    <Icon name='shopping basket' />\n                                </Button.Content>\n                            </Button>\n                            :\n                            <Link className='checkout-link' to={'/login'}>(log in to check out)</Link>\n                        }\n                    </p>\n                </div>\n            </div>\n            ) : (\n                <h3>\n                    <span role='img' aria-label='empty plate'>\n                    🍽️\n                    </span>\n                    There's no food in your order yet!\n                </h3>\n            )}\n            <script src=\"https://www.gstatic.com/firebasejs/8.3.2/firebase-messaging.js\"></script>\n        \n        \n        </Segment>\n    );\n};\n\nexport default Cart;","import React, { useEffect }  from 'react';\nimport { Card, Image, Button, Icon } from 'semantic-ui-react';\n\nimport {useQuery } from '@apollo/react-hooks';\n\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { formatName, idbPromise } from '../../utils/helpers';\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY, UPDATE_MENU_ITEMS } from '../../utils/actions';\nimport { QUERY_MENU_ITEM } from '../../utils/queries';\n\nfunction MenuItem(item) {\n    const {\n        _id,\n        name,\n        image,\n        price,\n        description  \n    } = item;\n\n    const { loading, data } = useQuery(QUERY_MENU_ITEM);\n\n    const [state, dispatch] = useStoreContext();\n    const { cart } = state;\n\n    const addToCart = () => {\n        const itemInCart = cart.find((cartItem) => cartItem._id === _id);\n\n        // if there was an item in cart, update purchase qty\n        if (itemInCart) {\n            dispatch({\n                type: UPDATE_CART_QUANTITY,\n                _id: _id,\n                purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n            });\n\n            idbPromise('cart', 'put', {\n                ...itemInCart,\n                purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n            });\n        } else {\n            dispatch({\n                type: ADD_TO_CART,\n                menuItem: { ...item, purchaseQuantity: 1 }\n            });\n            idbPromise('cart','put', { ...item, purchaseQuantity: 1 });\n        }\n    };\n\n    // \n    useEffect(() => {\n      // if there's data to be stored\n      if (data) {\n        //  store's in  the global state object\n        dispatch ({\n          type:UPDATE_MENU_ITEMS,\n          menuItems: data.menuItems\n        });\n        // takes each item and saves it to IndexDB\n        data.menuItems.forEach((menuItem) => {\n          idbPromise('menuItems', 'put', menuItem);\n        });\n      } else if (!loading) {\n        idbPromise('menuItems', 'get').then((menuItems) => {\n          dispatch({\n            type: UPDATE_MENU_ITEMS,\n            menuItems: menuItems\n          });\n        });\n      }\n    }, [data, loading, dispatch]);\n// \n\n    return (\n        <Card>\n            <Image ui={false} wrapped src={image} />\n            <Card.Content className='menu-cards'>\n                <Card.Header>{formatName(name)}</Card.Header>\n                <Card.Meta>${price}</Card.Meta>\n                <Card.Description>{description}</Card.Description>\n            </Card.Content>\n            <Button animated='fade' onClick={addToCart}>\n                <Button.Content hidden>Add To Order</Button.Content>\n                <Button.Content visible>\n                    <Icon name='utensils' />\n                </Button.Content>\n            </Button>\n        </Card>\n    );\n};\n\nexport default MenuItem","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Card, Header } from 'semantic-ui-react';\n\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_ALL_COURSES, UPDATE_MENU_ITEMS } from '../../utils/actions';\nimport { QUERY_ALL_MENU_ITEMS, QUERY_ALL_COURSES } from '../../utils/queries';\nimport { filterMenu, idbPromise } from '../../utils/helpers';\nimport MenuItem from '../MenuItem/index';\n\n\nfunction Menu() {\n    const [state, dispatch] = useStoreContext();\n    // const { currentCourse } = state; // might not need currentCourse, remove from GlobalState\n    const { loading, data } = useQuery(QUERY_ALL_MENU_ITEMS);\n    const { loading: coursesLoading, data: coursesData } = useQuery(QUERY_ALL_COURSES);\n   \n    // stores full menu in localStorage for admin dashboard render persistence\n    localStorage.setItem('menuItems', JSON.stringify(state.menuItems));\n\n    useEffect(() => {\n        switch (true) {\n                    \n            case (coursesData !== undefined):\n                dispatch({\n                    type: UPDATE_ALL_COURSES,\n                    allCourses: coursesData.course\n                });\n                        \n                // save to indexedDB\n                coursesData.course.forEach(course => {\n                    idbPromise('courses', 'put', course);\n                });\n                \n                break;\n                \n            case (data !== undefined): \n                dispatch({ \n                    type: UPDATE_MENU_ITEMS,\n                    menuItems: data.menuItems\n                });\n                \n                // save to indexedDB\n                data.menuItems.forEach(item => {\n                    idbPromise('menuItems', 'put', item);\n                });\n                \n                break;\n            \n            default:\n                idbPromise('menuItems', 'get').then(item => {\n                    dispatch({\n                        type: UPDATE_MENU_ITEMS,\n                        menuItems: item\n                    });\n                });\n\n                idbPromise('courses', 'get').then(course => {\n                    dispatch({ \n                        type: UPDATE_ALL_COURSES,\n                        allCourses: course\n                    });\n                });\n        };\n\n    }, [data, loading, coursesLoading, coursesData, dispatch]);\n\n    function capitalize(title) {\n        return title.toUpperCase();\n    };\n\n\n    return (\n        <div>\n            <Header size='large' className='menu-title'>MENU</Header>\n\n            {/* renders each menu course */}\n            {state.allCourses.map(course => (\n                <div key={course._id} className='course-wrapper'>\n                    <Header size='medium' className='course-title'>{capitalize(course.name)}</Header>\n                    <Card.Group className='card-group'>\n\n                        {/* renders each menu item */}\n                        {filterMenu(state.menuItems, course.name).map(item => (\n                            <MenuItem\n                                key={item._id}\n                                _id={item._id}\n                                image={item.image}\n                                name={item.name}\n                                price={item.price}\n                                description={item.description}\n                            />\n                        ))}\n\n                    </Card.Group>\n                </div>\n            ))}\n\n        </div>\n    );\n};\n\nexport default Menu;","import React, { createRef } from 'react'; \nimport { Grid, Segment, Rail, Sticky, Ref } from 'semantic-ui-react';\n\nimport Cart from '../components/Cart';\nimport Menu from '../components/Menu';\n\nconst Home = () => {\n    const contextRef = createRef();\n    \n    return (\n        <Grid stackable columns={2}>\n            <Grid.Column>\n                <Ref innerRef={contextRef}>\n                    <Segment className=\"menu\">\n                        <Menu />\n                        <Rail position='right'>\n                            <Sticky context={contextRef}>\n                                <Cart />\n                            </Sticky>\n                        </Rail>\n                    </Segment>\n                </Ref>\n            </Grid.Column>\n        </Grid>\n    );\n};\n\nexport default Home;","import React from \"react\";\n\nconst NoMatch = () => {\n    return (\n        <div>\n            <h1>404 Page Not Found</h1>\n        </div>\n    );\n};\n\nexport default NoMatch;","import React, { useState } from 'react';\nimport { Button, Input, Icon } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\nimport '../App.css';\n\nfunction Login() {\n\n    const [formState, setFormState] = useState({ email: '', password: '' });\n    const [login, { error }] = useMutation(LOGIN);\n\n    const handleFormSubmit = async event => {\n        event.preventDefault();\n\n        try {\n            const mutationResponse = await login({ variables: { email: formState.email, password: formState.password } })\n            const token = mutationResponse.data.login.token;\n            Auth.login(token);\n        } catch (e) {\n            console.log(e)\n        }\n    };\n\n    const handleChange = event => {\n\n        const { name, value } = event.target;\n        setFormState({\n            ...formState,\n            [name]: value\n        });\n    };\n\n    return (\n        <div className='login-container'>\n            <h2 className='login-title'>\n                Login\n            </h2>\n            <form\n            className='login-form'\n            onSubmit={handleFormSubmit}\n            >\n                <div className='ui input login-email'>\n                    <label\n                    htmlFor='email'\n                    className='login-email-label'\n                    >\n                        Email Address:\n                    </label>\n                    <Input\n                        placeholder='example@email.com'\n                        name='email'\n                        type='email'\n                        id='email'\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className='login-password'>\n                    <label\n                        htmlFor='password'\n                        className='login-password-label'\n                    >\n                        Password:\n                    </label>\n                    <Input\n                        placeholder='••••••'\n                        name='password'\n                        type='password'\n                        id='pwd'\n                        onChange={handleChange}\n                    />\n                </div>\n                {\n                    error ? <div>\n                        <p className='login-error'>Incorrect login credentials. Please try again.</p>\n                    </div> : null\n                }\n                <div className='login-btn-container'>\n                    <Button animated id='login-btn'>\n                        <Button.Content visible>Login</Button.Content>\n                        <Button.Content hidden>\n                            <Icon name='arrow right' />\n                        </Button.Content>\n                    </Button>\n                </div>\n            </form>\n            <div>\n                <Link to='/signup' >\n                    <p className='login-createUser'>\n                        Don't have an account? Sign up &rarr;\n                    </p>\n                </Link>\n            </div>\n        </div>\n    );\n}\n\nexport default Login;","import React, { useState } from \"react\";\nimport firebase from 'firebase';\nimport {Label, Icon} from 'semantic-ui-react';\nimport { useStoreContext } from '../../utils/GlobalState';\n\n\n\nfunction Permission () {\n\n    const [state] = useStoreContext();\n    const [permission, setPermission ] = useState(false);\n\n     const firebaseId = state.user._id\n\n    const messaging= firebase.messaging();\n\n    function gainPermission() {\n        messaging.requestPermission()\n        .then(function() {\n            console.log('Have permission');\n            \n            return messaging.getToken(); \n        })\n        .then( function (token) {\n\n            firebase.database().ref(`users/` + firebaseId).set({\n                firstName: state.user.firstName,\n                lastName: state.user.lastName,\n                token\n            })\n            .catch(function(error) {\n                console.error(error)\n            })\n            // firebase.database().ref('users/' + this.currentUid + '/notificationTokens/' + token).set(true)\n            console.log(token);\n            setPermission(true);\n        })\n        .catch(function(err) {\n            console.log(err);\n        })\n    };\n\n    function removePermission() {\n        messaging.deleteToken();\n        setPermission(false);\n        console.log('token removed')\n    };\n\n    return (\n        \n        (!permission) ? (\n        <>\n        <Label as='a' color='green' >\n            Turn notifications on \n        <Icon className=\"big\" aria-label=\"turn notifications on\" name=\"envelope outline\" onClick={gainPermission} />\n        </Label>\n        </>\n        ) : (\n        \n        <Label as='a' color='red'>\n            Turn notifications off \n        <Icon className=\"big\" aria-label=\"turn notifications off\" name=\"envelope open outline\" onClick={removePermission} />\n        </Label>\n        )\n        \n    )\n};\n\nexport default Permission;","import React, { useEffect } from \"react\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { Link } from \"react-router-dom\";\nimport { Header, Grid } from 'semantic-ui-react';\n\nimport Auth from \"../../utils/auth\";\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_USER } from '../../utils/actions';\nimport { QUERY_USER } from '../../utils/queries';\nimport Permission from '../Permission';\n\nfunction Nav() {\n    const [state, dispatch] = useStoreContext();\n    const { loading, data } = useQuery(QUERY_USER);\n\n    useEffect(() => {\n        if (data) {\n            dispatch({\n                type: UPDATE_USER,\n                user: data.user\n            })\n        }\n    }, [data, loading, dispatch]);\n\n    \n\n    function showNav() {\n        switch (true) {\n            case (state.user.role ===  'user'):\n                return (\n                    <>\n                        <Grid.Column className=\"navLinks\"> \n                            <Link to=\"/orderHistory\">\n                                Order History\n                            </Link>\n                        </Grid.Column> \n                        \n                        <Grid.Column className=\"navLinks\"> \n                            <a href=\"/\" onClick={() => Auth.logout()}>\n                                Logout\n                            </a>\n                        </Grid.Column>\n                        <Permission />\n                    </>\n                );\n            case (state.user.role === 'owner'):\n                return (\n                    <>\n                        <Grid.Column className=\"navLinks\"> \n                            <Link to=\"/dashboard\">\n                                Owner Dashboard\n                            </Link>\n                        </Grid.Column> \n                        \n                        <Grid.Column className=\"navLinks\"> \n                            <a href=\"/\" onClick={() => Auth.logout()}>\n                                Logout\n                            </a>\n                        </Grid.Column>\n                    </>\n                );\n            default: \n                return (\n                    <>\n                        <Grid.Column className=\"navLinks\">      \n                            <Link to=\"/signup\">\n                                Sign-Up\n                            </Link>\n                        </Grid.Column>    \n                    \n                        <Grid.Column className=\"navLinks\">   \n                            <Link to=\"/Login\">\n                                Login\n                            </Link>\n                        </Grid.Column>\n                    </>\n                );\n        }\n\t};\n\n    return (\n        <Header className=\"block nav-container\"> \n            <Grid className=\"middle aligned\" columns={3} divided>\n                <Grid.Row>\n                    <Grid.Column className=\"navLinks\">  \n                        <h1>\n                            <Link to=\"/\">\n                                <span role=\"img\" aria-label=\"empty plate\">🍽️Food Baby</span>\n                            </Link>\n                        </h1>\n                    </Grid.Column>  \n\n                    {showNav()}\n                </Grid.Row>\n            </Grid>\n        </Header>\n    );\n};\n\nexport default Nav;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_USER } from \"../utils/queries\"; \n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">\n          ← Back to Menu Items\n          </Link>\n\n          {user ? (\n            <>\n              <h2>Order History for {user.firstName} {user.lastName} </h2>\n              {user.orders.map((order) => (\n                <div key={order._id} className=\"my-2\">\n                  <h3>{new Date(parseInt(order.purchaseDate)).toLocaleDateString()}</h3>\n                  <div className=\"flex-row\">\n                    {order.menuItems.map(({ _id, image, name, price }, index) => (\n                      <div key={index} className=\"card px-1 py-1\">\n                        <Link to={`/menuItems/${_id}`}>\n                          <img\n                            alt={name}\n                            src={`/images/${image}`}\n                            />\n                            <p>{name}</p>\n                        </Link>\n                        <div>\n                          <span>${price}</span>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              ))}\n            </>\n          ) : null}\n        </div>\n      </>)\n  };\n\nexport default OrderHistory;","import React, { useState } from 'react';\nimport { Button, Input, Icon } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/react-hooks';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nimport '../App.css';\n\nfunction Signup() {\n    const [formState, setFormState] = useState({ email: '', password: '' });\n    const [addUser, { error }] = useMutation(ADD_USER);\n\n    const handleFormSubmit = async event => {\n        event.preventDefault();\n\n\n\n        try {\n            const mutationResponse = await addUser({\n                variables: {\n                    email: formState.email, password: formState.password,\n                    firstName: formState.firstName, lastName: formState.lastName\n                }\n            });\n\n            const token = mutationResponse.data.addUser.token;\n            Auth.login(token);\n       \n        } catch (e) {\n            if (e.message.includes('email: ')) {\n                console.log('Email is taken.')\n            } else {\n                console.log('Something went wrong. Please try again later.')\n            }\n        }\n    };\n\n    const handleChange = event => {\n        const { name, value } = event.target;\n        setFormState({\n            ...formState,\n            [name]: value\n        });\n    };\n\n    return (\n        <div className='login-container'>\n            <h2 className='login-title'>\n                Sign Up\n            </h2>\n            <form \n            onSubmit={handleFormSubmit}\n            className='create-form'\n            >\n                <div className='ui input create-user'>\n                    <label \n                    htmlFor='firstName'\n                    className='user-first-label'\n                    >\n                        First Name:\n                    </label>\n                    <Input\n                        placeholder='First'\n                        name='firstName'\n                        type='firstName'\n                        id='firstName'\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className='create-user'>\n                    <label \n                    htmlFor='lastName'\n                    className='user-last-label'\n                    >\n                        Last Name:\n                    </label>\n                    <Input\n                        placeholder='Last'\n                        name='lastName'\n                        type='lastName'\n                        id='lastName'\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className='create-user'>\n                    <label \n                    htmlFor='email'\n                    className='create-email-label'\n                    >\n                        Email Address:\n                    </label>\n                    <Input\n                        placeholder='youremail@test.com'\n                        name='email'\n                        type='email'\n                        id='email'\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className='create-user'>\n                    <label \n                    htmlFor='pwd'\n                    className='create-password-label'\n                    >\n                        Password:\n                    </label>\n                    <Input\n                        placeholder='••••••'\n                        name='password'\n                        type='password'\n                        id='pwd'\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className='login-btn-container'>\n                    <Button animated id='login-btn'>\n                        <Button.Content visible>Create Account</Button.Content>\n                        <Button.Content hidden>\n                            <Icon name='arrow right' />\n                        </Button.Content>\n                    </Button>\n                </div>\n            </form>\n            {\n                    error ? <div>\n                        <p className='createUser-error'>A User with these credentials already exist. Use the link below to sign in.</p>\n                    </div> : null\n                }\n            <div className='toLogin'>\n                <Link to='/login' >\n                    <p className='login-createUser'>\n                        &larr; Back to Login Page\n                    </p>\n                </Link>    \n            </div>    \n        </div>\n    );\n}\n\nexport default Signup;","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n\n    const [addOrder] = useMutation(ADD_ORDER);\n\n    useEffect(() => {\n        async function saveOrder() {\n            const cart = await idbPromise('cart', 'get');\n            const menuItems = cart.map(item => item._id);\n\n            console.log('==============================', menuItems);\n\n            // debugger;\n            if (menuItems.length) {\n                const { data } = await addOrder({ variables: { menuItems } });\n                const menuItemData = data.addOrder.menuItems;\n\n                console.log('====222222222222======', menuItemData);\n\n                menuItemData.forEach(item => {\n                    idbPromise('cart', 'delete', item)\n                    console.log('====33333333333======', item);\n\n                });\n\n                setTimeout(function() {\n                    window.location.assign('/')\n                }, 3000);\n            } else {\n                console.log('error');\n            }\n        }\n        saveOrder();\n    }, [addOrder])\n\n  \n\n    return (\n        <div>\n            <h1>Success!</h1>\n            <h2>\n                Thank you for your order!\n            </h2>\n            <h2>\n                You will now be redirected to the homepage.\n            </h2>\n        </div>\n    );\n};\n\nexport default Success;\n\n\n// , {`${user.firstName}`}","export const lightTheme = {\n    body: '#FFF',\n    text: '#363537',\n    toggleBorder: '#FFF',\n    background: '#363537',\n    a: '#2f5d62'\n}\nexport const darkTheme = {\n    body: '#363537',\n    text: '#FAFAFA',\n    toggleBorder: '#6B8096',\n    background: '#999',\n    a: '#ffb037',\n    div: '#999'\n}","import { createGlobalStyle } from \"styled-components\"\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.50s linear;\n  }\n  & .ui.segment.menu {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    border: 1px solid lightgrey\n   \n  }\n  & .ui.large.header.menu-title {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n  }\n  & .ui.medium.header.course-title {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n  }\n\n  & div.ui.segment.cart {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    border: 1px solid lightgrey\n  }\n\n  & div.cart.body {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n  }\n\n  & ol.ui.list li:before {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n  }\n\n  & div.ui.medium.dividing.header {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n  }\n\n  & div.ui.small.header {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n  }\n\n  & li::before {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n}\n\n& label.login-email-label {\n  color: ${({ theme }) => theme.text};\n  transition all .50s linear;\n}\n\n& label.user-first-label {\n  color: ${({ theme }) => theme.text};\n  transition all .50s linear;\n}\n\n& .menu-cards {\n  background: ${({ theme }) => theme.body};\n  color: ${({ theme }) => theme.text};\n}\n\n& .login-createUser {\n  color: ${({ theme }) => theme.a};\n}\n\n& .login-createUser:before {\n  background: ${({ theme }) => theme.a};\n  color: ${({ theme }) => theme.a};\n}\n\n& .checkout-link {\n  color: ${({ theme }) => theme.a};\n}\n\n& .checkout-link:hover {\n  color: ${({ theme }) => theme.a};\n}\n\n& .checkout-link:before {\n  background: ${({ theme }) => theme.a};\n  color: ${({ theme }) => theme.a};\n}\n\n& .close {\n  color: ${({ theme }) => theme.a};\n}\n  `\n","import React from 'react'\nimport { func, string } from 'prop-types';\nimport styled from \"styled-components\"\n// const Button = styled.button`\n//   background: ${({ theme }) => theme.background};\n//   border: 2px solid ${({ theme }) => theme.toggleBorder};\n//   color: ${({ theme }) => theme.text};\n//   border-radius: 30px;\n//   cursor: pointer;\n//   font-size:0.8rem;\n//   padding: 0.6rem;\n//   }\n// \\`;\n\nconst Button = styled.button`\n  background: ${({ theme }) => theme.background};\n  border: 2px solid ${({ theme }) => theme.toggleBorder};\n  border-radius: 50%;\n  cursor: pointer;\n  font-size: 0.5rem;\n  justify-content: space-between;\n  margin: 0 auto;\n  overflow: hidden;\n  padding: 0.5rem;\n  position: relative;\n  width: 4rem;\n  height: 4rem;\n  outline: none;\n  }\n`;\n\nconst StyledDiv = styled.div`\n  & .ui segment menu {\n    background: #A9A9A9\n  }\n\n  background: ${({ theme }) => theme.background};\n`\n\nconst Sun = styled.svg`\n height: auto;\n width: 2.5rem;\n transition: all 0.7s linear;\n`;\n\nconst Moon = styled.svg`\n  height: auto;\n  width: 2.5rem;\n  transition: all 0.7s linear;\n`;\n\nconst Toggle = ({theme,  toggleTheme }) => {\n    return (\n      <Button onClick={toggleTheme}>\n        <StyledDiv />\n        {theme === \"light\" ?\n          <Moon xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path style={{ fill: \"#F6C358\" }} d=\"M10.719 2.082c-2.572 2.028-4.719 5.212-4.719 9.918 0 4.569 1.938 7.798 4.548 9.895-4.829-.705-8.548-4.874-8.548-9.895 0-5.08 3.808-9.288 8.719-9.918zm1.281-2.082c-6.617 0-12 5.383-12 12s5.383 12 12 12c1.894 0 3.87-.333 5.37-1.179-3.453-.613-9.37-3.367-9.37-10.821 0-7.555 6.422-10.317 9.37-10.821-1.74-.682-3.476-1.179-5.37-1.179zm0 10.999c1.437.438 2.562 1.564 2.999 3.001.44-1.437 1.565-2.562 3.001-3-1.436-.439-2.561-1.563-3.001-3-.437 1.436-1.562 2.561-2.999 2.999zm8.001.001c.958.293 1.707 1.042 2 2.001.291-.959 1.042-1.709 1.999-2.001-.957-.292-1.707-1.042-2-2-.293.958-1.042 1.708-1.999 2zm-1-9c-.437 1.437-1.563 2.562-2.998 3.001 1.438.44 2.561 1.564 3.001 3.002.437-1.438 1.563-2.563 2.996-3.002-1.433-.437-2.559-1.564-2.999-3.001z\" /></Moon>\n          : <Sun xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path style={{ fill: \"#F6C358\" }} d=\"M12 9c1.654 0 3 1.346 3 3s-1.346 3-3 3-3-1.346-3-3 1.346-3 3-3zm0-2c-2.762 0-5 2.238-5 5s2.238 5 5 5 5-2.238 5-5-2.238-5-5-5zm0-2c.34 0 .672.033 1 .08v-2.08h-2v2.08c.328-.047.66-.08 1-.08zm-4.184 1.401l-1.472-1.473-1.414 1.415 1.473 1.473c.401-.537.876-1.013 1.413-1.415zm9.782 1.414l1.473-1.473-1.414-1.414-1.473 1.473c.537.402 1.012.878 1.414 1.414zm-5.598 11.185c-.34 0-.672-.033-1-.08v2.08h2v-2.08c-.328.047-.66.08-1 .08zm4.185-1.402l1.473 1.473 1.415-1.415-1.473-1.472c-.403.536-.879 1.012-1.415 1.414zm-11.185-5.598c0-.34.033-.672.08-1h-2.08v2h2.08c-.047-.328-.08-.66-.08-1zm13.92-1c.047.328.08.66.08 1s-.033.672-.08 1h2.08v-2h-2.08zm-12.519 5.184l-1.473 1.473 1.414 1.414 1.473-1.473c-.536-.402-1.012-.877-1.414-1.414z\" /></Sun>}\n      </Button>\n    );\n};\n\n\n// const Toggle = ({theme,  toggleTheme }) => {\n//     return (\n//         <Button onClick={toggleTheme} >\n//           Switch Theme\n//         </Button>\n//     );\n// };\nToggle.propTypes = {\n    theme: string.isRequired,\n    toggleTheme: func.isRequired,\n}\nexport default Toggle;\n\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-boost';\nimport firebase from 'firebase';\n\nimport Dashboard from \"./pages/Dashboard\";\nimport Home from \"./pages/Home\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Login from \"./pages/Login\";\nimport Nav from \"./components/Nav\";\nimport OrderHistory from './pages/OrderHistory';\nimport Signup from \"./pages/Signup\";\nimport Success from \"./pages/Success\";\nimport { StoreProvider } from \"./utils/GlobalState\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { useDarkMode } from './components/Themes/useDarkMode';\nimport { lightTheme, darkTheme } from \"./components/Themes/Themes\";\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"./components/Themes/GlobalStyles\";\nimport Toggle from './components/Themes/Toggler'\nimport { Message } from \"semantic-ui-react\";\n\n\nconst client = new ApolloClient({\n  request: (operation) => {\n    const token = localStorage.getItem('id_token')\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : ''\n      }\n    })\n  },\n  uri: '/graphql',\n})\n\n// const App = () => \n  \n  const firebaseConfig = {\n  apiKey: \"AIzaSyAPYUQl3v49glJc2H1WErSHVGgejiqEfxo\",\n  authDomain: \"food-baby-682db.firebaseapp.com\",\n  databaseURL: \"https://food-baby-682db-default-rtdb.firebaseio.com\",\n  projectId: \"food-baby-682db\",\n  storageBucket: \"food-baby-682db.appspot.com\",\n  messagingSenderId: \"696002118688\",\n  appId: \"1:696002118688:web:c7b3e92a1806d71bb92845\",\n  measurementId: \"G-L9R64LNE17\"\n};\n\n  const onMessageListener = () =>\n    new Promise((resolve) => {\n      messaging.onMessage((payload) => {\n        resolve(payload)\n      })\n    })\n\n\n  // Initialize Firebase\n  if (firebase.apps.length === 0) {\n    firebase.initializeApp(firebaseConfig);\n  }\n\n  const messaging = firebase.messaging();\n  // messaging.requestPermission()\n  // .then(function() {\n  //   console.log('Have permission');\n  //   return messaging.getToken(); \n  // })\n  // .then( function (token) {\n\n  //   console.log(token);\n  // })\n  // .catch(function(err) {\n  //   console.log(err);\n  // })\n  messaging.onMessage(payload => {\n    console.log('onMessage:', payload)\n  });\n\n  function App() {\n\n    const [theme, themeToggler] = useDarkMode();\n\n    const themeMode = theme === 'light' ? lightTheme : darkTheme;\n\n    const [show, setShow] = useState(false)\n    const [notification, setNotification] = useState({ title: '', body: '' });\n\n    onMessageListener().then(payload => {\n      setShow(true);\n      setNotification({ title: payload.notification.title, body: payload.notification.body })\n      console.log(payload);\n    }).catch(err => console.log('failed: ', err));\n\n    const handleDismiss = () => {\n      setShow(false)\n\n    }\n\n    return (\n\n      <ApolloProvider client={client}>\n\n        <Router>\n          <ThemeProvider theme={themeMode}>\n            <>\n              <GlobalStyles />\n              <div>\n                <Toggle theme={theme} toggleTheme={themeToggler} />\n                <StoreProvider>\n                  <Nav />\n                  {(show) && <Message\n                    onDismiss={() => handleDismiss()}\n                    show={show}\n                    delay={100}\n                    header={notification.title}\n                    content={notification.body}\n                  />}\n                  <Switch>\n                    <Route exact path=\"/\" component={Home} />\n                    <Route exact path=\"/dashboard\" component={Dashboard} />\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/orderHistory\" component={OrderHistory} />\n                    <Route exact path=\"/signup\" component={Signup} />\n                    <Route exact path=\"/success\" component={Success} />\n                    <Route component={NoMatch} />\n                  </Switch>\n                </StoreProvider>\n              </div>\n            </>\n          </ThemeProvider>\n        </Router>\n        <script src=\"https://www.gstatic.com/firebasejs/8.3.2/firebase-messaging.js\"></script>\n        <script src=\"https://www.gstatic.com/firebasejs/8.3.2/firebase-database.js\"></script>\n      </ApolloProvider>\n    );\n  }\n\n  export default App;\n","import { useEffect, useState } from 'react';\nexport const useDarkMode = () => {\n    const [theme, setTheme] = useState('light');\n\n    const setMode = mode => {\n        window.localStorage.setItem('theme', mode)\n        setTheme(mode)\n    };\n\n    const themeToggler = () => {\n        theme === 'light' ? setMode('dark') : setMode('light')\n    };\n\n    useEffect(() => {\n        const localTheme = window.localStorage.getItem('theme');\n        localTheme && setTheme(localTheme)\n    }, []);\n    return [theme, themeToggler]\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}